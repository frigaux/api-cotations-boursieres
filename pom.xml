<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.fabien</groupId>
    <artifactId>api-cotations-boursieres</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>api-cotations-boursieres</name>
    <description>API bourse : valeurs et cours</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- To cross-compile correctly, the new -release option replaces three flags: -source, -target and -bootclasspath-->
        <maven.compiler.release>21</maven.compiler.release>
        <java.version>21</java.version>

        <!-- kotlin -->
        <kotlin.code.style>official</kotlin.code.style>
        <kotlin.compiler.jvmTarget>21</kotlin.compiler.jvmTarget>
        <kotlin.version>2.1.0</kotlin.version>

        <jpa.cotations.version>0.0.1-SNAPSHOT</jpa.cotations.version>
        <jupiter.version>5.11.4</jupiter.version>
        <kotlin.logging.version>3.0.5</kotlin.logging.version>
        <mysql.version>9.1.0</mysql.version>
        <h2.version>2.3.232</h2.version>
        <openapi.version>2.8.5</openapi.version>
        <jjwt.version>0.12.6</jjwt.version>
    </properties>

    <repositories>
        <repository>
            <id>mavenCentral</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>fr.fabien</groupId>
            <artifactId>jpa-cotations-boursieres</artifactId>
            <version>${jpa.cotations.version}</version>
        </dependency>

        <!-- Kotlin standard library. -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <!-- Runtime libraries for Kotlin reflection. -->
        <!-- https://kotlinlang.org/docs/reflection.html -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!-- Kotlin Test library support for JUnit5. -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://www.baeldung.com/kotlin/kotlin-logging-library -->
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
            <version>${kotlin.logging.version}</version>
        </dependency>

        <!-- Spring boot web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Validators for @Min, @Max, ... -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/index.html -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-resource-server</artifactId>
        </dependency>
        <!-- https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/jwt.html -->
        <!-- Support for decoding and verifying JWTs -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>

        <!-- Driver Mysql (profil != test) -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- H2 (profil test) -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- OpenAPI 3 -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${openapi.version}</version>
        </dependency>
    </dependencies>

    <!-- https://spring.io/guides/tutorials/spring-boot-kotlin#maven-build -->
    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <configuration>
                    <!-- Kotlin support for JSR 305 annotations : @Nonnull-->
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <!--
                    In addition to the obvious Kotlin Maven plugin, the default configuration declares the kotlin-spring
                    plugin which automatically opens classes and methods (unlike in Java, the default qualifier is final
                    in Kotlin) annotated or meta-annotated with Spring annotations. This is useful to be able to create
                    @Configuration or @Transactional beans without having to add the open qualifier required by CGLIB
                    proxies for example.
                    -->
                    <!--
                    In order to make lazy fetching working as expected, entities should be open as described in
                    KT-28525. We are going to use the Kotlin allopen plugin for that purpose.
                    -->
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>all-open</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>